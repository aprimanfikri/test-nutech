{
  "openapi": "3.0.0",
  "info": {
    "title": "API Contract SIMS PPOB",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "1. Module Membership"
    },
    {
      "name": "2. Module Information"
    },
    {
      "name": "3. Module Transaction"
    }
  ],
  "paths": {
    "/api/v1/users/register": {
      "post": {
        "tags": ["1. Module Membership"],
        "description": "**API Registration Public (Tidak perlu Token untuk mengaksesnya)**\n\nDigunakan untuk melakukan registrasi User agar bisa Login kedalam aplikasi.\n\nKetentuan:\n\n1. Parameter request email harus terdapat validasi format email.\n2. Parameter request password Length minimal 8 karakter.\n3. Handling Response sesuai dokumentasi Response dibawah.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "first_name": {
                    "type": "string",
                    "example": "John"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "password": {
                    "type": "string",
                    "example": "Password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Registrasi berhasil silahkan login"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "example": "Parameter email tidak sesuai format"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/login": {
      "post": {
        "tags": ["1. Module Membership"],
        "description": "**API Login Public (Tidak perlu Token untuk mengaksesnya)**\n\nDigunakan untuk melakukan login dan mendapatkan authentication berupa JWT (Json Web Token).\n\nKetentuan:\n\n1. Parameter request email harus terdapat validasi format email.\n2. Parameter request password Length minimal 8 karakter.\n3. **JWT** yang digenerate harus memuat payload email dan di set expiration selama 12 jam dari waktu di generate.\n4. Handling Response sesuai dokumentasi Response dibawah.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Registrasi berhasil silahkan login"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.1234567890abcdefghijklmnopqrstuvwxyz"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "example": "Parameter email tidak sesuai format"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 103
                    },
                    "message": {
                      "type": "string",
                      "example": "Email atau password salah"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile": {
      "get": {
        "tags": ["1. Module Membership"],
        "description": "**API Profile Private (memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk mendapatkan informasi profile User.\n\nKetentuan:\n\n1. Service ini harus menggunakan **Bearer Token JWT** untuk mengaksesnya.\n2. Tidak ada parameter email di query param url ataupun request body, parameter email diambil dari payload JWT yang didapatkan dari hasil login.\n3. Handling Response sesuai dokumentasi Response dibawah.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Sukses"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "profile_image": {
                          "type": "string",
                          "example": "https://yoururlapi.com/profile.jpeg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/update": {
      "put": {
        "tags": ["1. Module Membership"],
        "description": "**API Update Profile Private (memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk mengupdate data profile User.\n\nKetentuan:\n\n1. Service ini harus menggunakan **Bearer Token JWT** untuk mengaksesnya.\n2. Tidak ada parameter email di query param url ataupun request body, parameter email diambil dari payload JWT yang didapatkan dari hasil login.\n3. Handling Response sesuai dokumentasi Response dibawah.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "Barry"
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Allen"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Update Pofile berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "profile_image": {
                          "type": "string",
                          "example": "https://yoururlapi.com/profile.jpeg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/profile/image": {
      "put": {
        "tags": ["1. Module Membership"],
        "description": "**API Upload Profile Image Private (memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk mengupdate / upload profile image User.\n\nKetentuan:\n\n1. Service ini harus menggunakan **Bearer Token JWT** untuk mengaksesnya.\n2. Tidak ada parameter email di query param url ataupun request body, parameter email diambil dari payload JWT yang didapatkan dari hasil login.\n3. Format Image yang boleh di upload hanya jpeg dan png.\n4. Handling Response sesuai dokumentasi Response dibawah.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Update Profile Image berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "john.doe@example.com"
                        },
                        "first_name": {
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Doe"
                        },
                        "profile_image": {
                          "type": "string",
                          "example": "https://yoururlapi.com/profile-updated.jpeg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "example": "Format Image tidak sesuai"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/banners": {
      "get": {
        "tags": ["2. Module Information"],
        "description": "**API Banner Public (tidak memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk mendapatkan list banner.\n\nKetentuan:\n\n1. Buat data list banner sesuai dokumentasi Response dibawah, usahakan banner ini tidak di hardcode, melainkan ambil dari database.\n2. Tidak perlu membuatkan module CRUD banner.\n3. Handling Response sesuai dokumentasi Response dibawah.",
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Sukses"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "banner_name": {
                            "type": "string",
                            "example": "Banner 1"
                          },
                          "banner_image": {
                            "type": "string",
                            "example": "https://nutech-integrasi.app/dummy.jpg"
                          },
                          "description": {
                            "type": "string",
                            "example": "Lerem Ipsum Dolor sit amet"
                          }
                        }
                      },
                      "example": [
                        {
                          "banner_name": "Banner 1",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 2",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 3",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 4",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 5",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        },
                        {
                          "banner_name": "Banner 6",
                          "banner_image": "https://nutech-integrasi.app/dummy.jpg",
                          "description": "Lerem Ipsum Dolor sit amet"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/services": {
      "get": {
        "tags": ["2. Module Information"],
        "description": "**API Services Private (memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk mendapatkan list banner.\n\nKetentuan:\n\n1. Buat data list banner sesuai dokumentasi Response dibawah, usahakan banner ini tidak di hardcode, melainkan ambil dari database.\n2. Tidak perlu membuatkan module CRUD banner.\n3. Handling Response sesuai dokumentasi Response dibawah.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Sukses"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service_code": {
                            "type": "string",
                            "example": "PAJAK"
                          },
                          "service_name": {
                            "type": "string",
                            "example": "Pajak PBB"
                          },
                          "service_icon": {
                            "type": "string",
                            "example": "https://nutech-integrasi.app/dummy.jpg"
                          },
                          "service_tarif": {
                            "type": "integer",
                            "example": 40000
                          }
                        }
                      },
                      "example": [
                        {
                          "service_code": "PAJAK",
                          "service_name": "Pajak PBB",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 40000
                        },
                        {
                          "service_code": "PLN",
                          "service_name": "Listrik",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 10000
                        },
                        {
                          "service_code": "PDAM",
                          "service_name": "PDAM Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 40000
                        },
                        {
                          "service_code": "PULSA",
                          "service_name": "Pulsa",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 40000
                        },
                        {
                          "service_code": "PGN",
                          "service_name": "PGN Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "MUSIK",
                          "service_name": "Musik Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "TV",
                          "service_name": "TV Berlangganan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "PAKET_DATA",
                          "service_name": "Paket data",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 50000
                        },
                        {
                          "service_code": "VOUCHER_GAME",
                          "service_name": "Voucher Game",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 100000
                        },
                        {
                          "service_code": "VOUCHER_MAKANAN",
                          "service_name": "Voucher Makanan",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 100000
                        },
                        {
                          "service_code": "QURBAN",
                          "service_name": "Qurban",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 200000
                        },
                        {
                          "service_code": "ZAKAT",
                          "service_name": "Zakat",
                          "service_icon": "https://nutech-integrasi.app/dummy.jpg",
                          "service_tariff": 300000
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/balance": {
      "get": {
        "tags": ["3. Module Transaction"],
        "description": "**API Balance Private (memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk mendapatkan informasi balance / saldo terakhir dari User.\n\nKetentuan:\n\n1. Service ini harus menggunakan **Bearer Token JWT** untuk mengaksesnya.\n2. idak ada parameter email di query param url ataupun request body, parameter email diambil dari payload JWT yang didapatkan dari hasil login.\n3. Handling Response sesuai dokumentasi Response dibawah.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Get Balance Berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "integer",
                          "example": 1000000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/topup": {
      "post": {
        "tags": ["3. Module Transaction"],
        "description": "**API Topup Private (memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk melakukan top up balance / saldo dari User.\n\nKetentuan:\n\n1. Service ini harus menggunakan **Bearer Token JWT** untuk mengaksesnya.\n2. Tidak ada parameter email di query param url ataupun request body, parameter email diambil dari payload JWT yang didapatkan dari hasil login.\n3. Setiap kali melakukan Top Up maka balance / saldo dari User otomatis bertambah.\n4. Parameter **amount** hanya boleh angka saja dan tidak boleh lebih kecil dari 0.\n5. Pada saat Top Up set transaction_type di database menjadi **TOPUP**.\n6. Handling Response sesuai dokumentasi Response dibawah.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "top_up_amount": {
                    "type": "integer",
                    "example": 1000000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Top Up Balance berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "balance": {
                          "type": "integer",
                          "example": 1000000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "example": "Parameter amount hanya boleh angka dan tidak boleh lebih kecil dari 0"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions": {
      "post": {
        "tags": ["3. Module Transaction"],
        "description": "**API Transaction Private (memerlukan Token untuk mengaksesnya)**\n\nDigunakan untuk melakukan transaksi dari services / layanan yang tersedia.\n\nKetentuan:\n\n1. Service ini harus menggunakan **Bearer Token JWT** untuk mengaksesnya.\n2. Tidak ada parameter email di query param url ataupun request body, parameter email diambil dari payload JWT yang didapatkan dari hasil login.\n3. Setiap kali melakukan Transaksi harus dipastikan balance / saldo mencukupi.\n4. Pada saat Transaction set transaction_type di database menjadi **PAYMENT**.\n5. Handling Response sesuai dokumentasi Response dibawah.\n6. Response **invoice_number** untuk formatnya generate bebas.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "service_code": {
                    "type": "string",
                    "example": "PULSA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaksi berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "invoice_number": {
                          "type": "string",
                          "example": "INV17082023-001"
                        },
                        "service_code": {
                          "type": "string",
                          "example": "PLN_PRABAYAR"
                        },
                        "service_name": {
                          "type": "string",
                          "example": "PLN Prabayar"
                        },
                        "transaction_type": {
                          "type": "string",
                          "example": "PAYMENT"
                        },
                        "total_amount": {
                          "type": "integer",
                          "example": 10000
                        },
                        "created_on": {
                          "type": "string",
                          "example": "2023-08-17T10:10:10.000Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 102
                    },
                    "message": {
                      "type": "string",
                      "example": "Service ataus Layanan tidak ditemukan"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/transactions/history": {
      "get": {
        "tags": ["3. Module Transaction"],
        "description": "**API History Private (memerlukan Token untuk mengaksesnya**\n\nDigunakan untuk mendapatkan informasi history transaksi.\n\nKetentuan:\n\n1. Service ini harus menggunakan **Bearer Token JWT** untuk mengaksesnya.\n2. Tidak ada parameter email di query param url ataupun request body, parameter email diambil dari payload JWT yang didapatkan dari hasil login.\n3. Terdapat parameter **limit** yang bersifat **opsional**, jika limit tidak dikirim maka tampilkan semua data.\n4. Data di order dari yang paling baru berdasarkan transaction date (created_on).\n5. Handling Response sesuai dokumentasi Response dibawah.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "example": "Get History Berhasil"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "offset": {
                          "type": "integer",
                          "example": 0
                        },
                        "limit": {
                          "type": "integer",
                          "example": 3
                        },
                        "records": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "invoice_number": {
                                "type": "string",
                                "example": "INV17082023-001"
                              },
                              "transaction_type": {
                                "type": "string",
                                "example": "TOPUP"
                              },
                              "description": {
                                "type": "string",
                                "example": "Top Up balance"
                              },
                              "total_amount": {
                                "type": "integer",
                                "example": 100000
                              },
                              "created_on": {
                                "type": "string",
                                "example": "2023-08-17T10:10:10.000Z"
                              }
                            }
                          },
                          "example": [
                            {
                              "invoice_number": "INV17082023-001",
                              "transaction_type": "TOPUP",
                              "description": "Top Up balance",
                              "total_amount": 100000,
                              "created_on": "2023-08-17T10:10:10.000Z"
                            },
                            {
                              "invoice_number": "INV17082023-002",
                              "transaction_type": "PAYMENT",
                              "description": "PLN Pascabayar",
                              "total_amount": 10000,
                              "created_on": "2023-08-17T11:10:10.000Z"
                            },
                            {
                              "invoice_number": "INV17082023-003",
                              "transaction_type": "PAYMENT",
                              "description": "Pulsa Indosat",
                              "total_amount": 40000,
                              "created_on": "2023-08-17T12:10:10.000Z"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 108
                    },
                    "message": {
                      "type": "string",
                      "example": "Token tidak valid atau kadaluwarsa"
                    },
                    "data": {
                      "type": "object",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
